(function(){function s(l,e,n){function t(o,i){if(!e[o]){if(!l[o]){var u="function"==typeof require&&require;if(!i&&u)return u(o,!0);if(r)return r(o,!0);var h=new Error("Cannot find module '"+o+"'");throw h.code="MODULE_NOT_FOUND",h}var a=e[o]={exports:{}};l[o][0].call(a.exports,function(e){var a=l[o][1][e];return t(a||e)},a,a.exports,s,l,e,n)}return e[o].exports}for(var r="function"==typeof require&&require,a=0;a<n.length;a++)t(n[a]);return t}return s})()({1:[function(e,t){t.exports=function(e){function t(t,n,r){return void 0===a[t]?[e.default,r]:a[t](n,r)||[e.default,r]}var a=Object.keys(e.states).reduce(function(t,a){var n=e.states[a].map(function(t){if(!e.states[t[1]]&&!e.accepting.includes(t[1]))throw new Error("Programming Error: Transition defined for unknown state \""+t[1]+"\"");var a=t[0].test?function(e){return t[0].test(e)}:function(e){return e===t[0]};return[a,t[1],t[2]]});return t[a]=function(e,t){var a=n.find(function(t){return t[0](e)});return a&&[a[1],a[2]?a[2](t,e):t]},t},{});return{run:function(a){let n,r=e.initial,o="",s=e.seed;for(let p=0,i=a.length;p<i;p+=1){const i=a.charAt(p),l=t(r,i,s);if(n=l[0],s=l[1],n===e.stop)break;o+=i,r=n}return e.accepting.includes(r)?{value:o,state:r,acc:s}:null}}}},{}],2:[function(e,t){function a(e){return function(){let t=e.apply(this,arguments);for(;t instanceof Function;)t=t();return t}}function n(e,t,a){a=a||e.pop(),a.value.forEach(a=>{e.push(a),t()})}const r=e("./types");t.exports=e=>[{name:"i",signature:"i      :  [P]  ->  ...",help:"Executes P. So, [P] i  ==  P.",handlers:[[["List"],function(t){n(t,e)}]]},{name:"x",signature:"x      :  [P]i  ->  ...",help:"Executes P without popping [P]. So, [P] x  ==  [P] P.",handlers:[[["List"],function(t){const a=t.pop();t.push(a),n(t,e,a)}]]},{name:"dip",signature:"dip      :  X [P]  ->  ... X",help:"Saves X, executes P, pushes X back.",handlers:[[["*","List"],function(t){const a=t.pop(),r=t.pop();t.push(a),n(t,e),t.push(r)}]]},{name:"app1",signature:"app1      :  X [P]  ->  R",help:"Executes P, pushes result R on stack without X.",handlers:[[["*","List"],function(t){const a=t.pop(),r=t.pop();t.push(t.restoreAfter(()=>(t.push(r),n(t,e,a),t.pop())))}]]},{name:"construct",signature:"construct      :  [P] [[P1] [P2] ..]  ->  R1 R2 ..",help:`
Saves state of stack and then executes [P].
Then executes each [Pi] to give Ri pushed onto saved stack.
`.trim(),handlers:[[["List","List"],function(t){const a=t.pop(),r=t.pop(),o=t.restoreAfter(()=>{const o=[];return n(t,e,r),a.forEach(a=>{n(t,e,a),o.push(t.pop())}),o});o.forEach(e=>{t.push(e)})}]]},{name:"nullary",signature:"nullary      :  [P]  ->  R",help:`
Executes P, which leaves R on top of the stack.
No matter how many parameters this consumes, none are removed from the stack.
`.trim(),handlers:[[["List"],function(t){const a=t.pop();t.push(t.restoreAfter(()=>(n(t,e,a),t.pop())))}]]},{name:"unary",signature:"unary      :  X [P]  ->  R",help:`
Executes P, which leaves R on top of the stack.
No matter how many parameters this consumes,
exactly one is removed from the stack.
`.trim(),handlers:[[["*","List"],function(t){const a=t.pop(),r=t.pop();t.push(t.restoreAfter(()=>(t.push(r),n(t,e,a),t.pop())))}]]},{name:"binary",signature:"binary      :  X Y [P]  ->  R",help:`
Executes P, which leaves R on top of the stack.
No matter how many parameters this consumes,
exactly two are removed from the stack.
`.trim(),handlers:[[["*","*","List"],function(t){const a=t.pop(),r=t.pop(),o=t.pop();t.push(t.restoreAfter(()=>(t.push(o),t.push(r),n(t,e,a),t.pop())))}]]},{name:"ternary",signature:"ternary      :  X Y Z [P]  ->  R",help:`
Executes P, which leaves R on top of the stack.
No matter how many parameters this consumes,
exactly three are removed from the stack.
`.trim(),handlers:[[["*","*","*","List"],function(t){const a=t.pop(),r=t.pop(),o=t.pop(),s=t.pop();t.push(t.restoreAfter(()=>(t.push(s),t.push(o),t.push(r),n(t,e,a),t.pop())))}]]},{name:"cleave",signature:"cleave      :  X [P1] [P2]  ->  R1 R2",help:"Executes P1 and P2, each with X on top, producing two results.",handlers:[[["*","List","List"],function(t){const a=t.pop(),r=t.pop(),o=t.pop();t.push(o),n(t,e,r),t.push(o),n(t,e,a)}]]},{name:"branch",signature:"branch      :  B [T] [F]  ->  ...",help:"If B is true, then executes T else executes F.",handlers:[[["Bool","List","List"],function(t){const a=t.pop(),r=t.pop(),o=t.pop();o.value?n(t,e,r):n(t,e,a)}]]},{name:"ifte",signature:"ifte      :  [B] [T] [F]  ->  ...",help:"Executes B. If that yields true, then executes T else executes F.",handlers:[[["List","List","List"],function(t){const a=t.pop(),r=t.pop(),o=t.pop(),s=t.restoreAfter(()=>(n(t,e,o),t.pop().value));s?n(t,e,r):n(t,e,a)}]]},{name:"ifinteger",signature:"ifinteger      :  X [T] [E]  ->  ...",help:"If X is an integer, executes T else executes E.",handlers:[[["*","List","List"],function(t){const a=t.pop(),r=t.pop(),o=t.pop();n(t,e,o.isInteger?r:a)}]]},{name:"ifchar",signature:"ifchar      :  X [T] [E]  ->  ...",help:"If X is a character, executes T else executes E.",handlers:[[["*","List","List"],function(t){const a=t.pop(),r=t.pop(),o=t.pop();n(t,e,o.isCharacter?r:a)}]]},{name:"iflogical",signature:"iflogical      :  X [T] [E]  ->  ...",help:"If X is a logical or truth value, executes T else executes E.",handlers:[[["*","List","List"],function(t){const a=t.pop(),r=t.pop(),o=t.pop();n(t,e,o.isBool?r:a)}]]},{name:"ifset",signature:"ifset      :  X [T] [E]  ->  ...",help:"If X is a set, executes T else executes E.",handlers:[[["*","List","List"],function(t){const a=t.pop(),r=t.pop(),o=t.pop();n(t,e,o.isSet?r:a)}]]},{name:"ifstring",signature:"ifstring      :  X [T] [E]  ->  ...",help:"If X is a string, executes T else executes E.",handlers:[[["*","List","List"],function(t){const a=t.pop(),r=t.pop(),o=t.pop();n(t,e,o.isString?r:a)}]]},{name:"iflist",signature:"iflist      :  X [T] [E]  ->  ...",help:"If X is a list, executes T else executes E.",handlers:[[["*","List","List"],function(t){const a=t.pop(),r=t.pop(),o=t.pop();n(t,e,o.isList?r:a)}]]},{name:"iffloat",signature:"iffloat      :  X [T] [E]  ->  ...",help:"If X is a float, executes T else executes E.",handlers:[[["*","List","List"],function(t){const a=t.pop(),r=t.pop(),o=t.pop();n(t,e,o.isFloat?r:a)}]]},{name:"cond",signature:"cond      :  [..[[Bi] Ti]..[D]]  ->  ...",help:`
Tries each Bi. If that yields true, then executes Ti and exits.
If no Bi yields true, executes default D.
`.trim(),handlers:[[["List"],function(t){const a=t.pop();for(let r=0,o=a.value.length-1;r<o;r+=1){const o=t.restoreAfter(()=>(t.push(a.value[r].value[0]),n(t,e),t.pop().value));if(o)return t.push(a.value[r].value[1]),void e()}t.push(a.value[a.value.length-1]),n(t,e)}]]},{name:"step",signature:"step      :  A  [P]  ->  ...",help:`
Sequentially putting members of aggregate A onto stack,
executes P for each member of A.
`.trim(),handlers:[[["List","List"],function(t){const r=t.pop(),a=t.pop();a.value.forEach(o=>{t.push(o),t.push(r),n(t,e)})}],[["String","List"],function(t){const a=t.pop(),o=t.pop();o.value.split("").forEach(o=>{t.push(new r.JoyChar(o)),t.push(a),n(t,e)})}],[["Set","List"],function(t){const r=t.pop(),a=t.pop();a.forEachOrdered(o=>{t.push(o),t.push(r),n(t,e)})}]]},{name:"fold",signature:"fold      :  A V0 [P]  ->  V",help:`
Starting with value V0, sequentially pushes members of aggregate A
and combines with binary operator P to produce value V.
`.trim(),handlers:[[["List","*","List"],function(t){const a=t.pop(),r=t.pop(),o=t.pop();t.push(r),o.value.forEach(r=>{t.push(r),n(t,e,a)})}],[["String","Char","List"],function(t){const a=t.pop(),o=t.pop(),s=t.pop();t.push(o),s.value.split("").forEach(o=>{t.push(new r.JoyChar(o)),n(t,e,a)})}],[["Set","Integer","List"],function(t){const a=t.pop(),r=t.pop(),o=t.pop();t.push(r),o.forEach(r=>{t.push(r),n(t,e,a)})}]]},{name:"map",signature:"map      :  A [P]  ->  B",help:`
Executes P on each member of aggregate A,
collects results in sametype aggregate B.
`.trim(),handlers:[[["List","List"],function(t){const a=t.pop(),o=t.pop(),s=[];o.value.forEach(r=>{t.push(r),n(t,e,a),s.push(t.pop())}),t.push(new r.JoyList(s))}],[["String","List"],function(t){const a=t.pop(),o=t.pop();let s="";o.value.split("").forEach(o=>{t.push(new r.JoyChar(o)),n(t,e,a),s+=t.pop().value}),t.push(new r.JoyString(s))}],[["Set","List"],function(t){const a=t.pop(),o=t.pop(),s=new r.JoySet([]);o.forEach(r=>{t.push(r),n(t,e,a),s.add(t.pop())}),t.push(s)}]]},{name:"primrec",signature:"primrec      :  X [I] [C]  ->  R",help:`
Executes I to obtain an initial value R0.
For integer X uses increasing positive integers to X, combines by C for new R.
For aggregate X uses successive members and combines by C for new R.
`.trim(),handlers:[[["Integer","List","List"],function(t){const o=t.pop(),s=t.pop(),n=a(function a(i){return 0===i?s.value[0]:function(){t.push(new r.JoyInt(i));const n=a(i-1);return t.push(n instanceof Function?n():n),o.value.forEach(a=>{t.push(a),e()}),t.pop()}});t.push(n(t.pop().value))}]]},{name:"filter",signature:"filter      :  A [B]  ->  A1",help:"Uses test B to filter aggregate A producing sametype aggregate A1.",handlers:[[["List","List"],function(t){const o=t.pop(),a=t.pop(),s=[];a.value.forEach(r=>{t.push(r),t.push(o),n(t,e),t.pop().value&&s.push(r)}),t.push(new r.JoyList(s))}],[["String","List"],function(t){const a=t.pop(),o=t.pop();let s="";o.value.split("").forEach(o=>{t.push(new r.JoyChar(o)),t.push(a),n(t,e),t.pop().value&&(s+=o)}),t.push(new r.JoyString(s))}],[["Set","List"],function(t){const o=t.pop(),a=t.pop(),s=new r.JoySet([]);a.forEach(r=>{t.push(r),t.push(o),n(t,e),t.pop().value&&s.add(r)}),t.push(s)}]]}]},{"./types":9}],3:[function(e,t){function a(){const e={};return{define:function(t,a){if(Object.prototype.hasOwnProperty.call(e,t))throw new Error("Word \""+t+"\" already defined");e[t]=a},get:function(t){if(!Object.prototype.hasOwnProperty.call(e,t))throw new Error("Word \""+t+"\" is not defined");return e[t]},keys:function(){return Object.keys(e)}}}const n=e("./combinator_defs"),r=e("./misc_defs"),o=e("./operand_defs"),s=e("./operator_defs"),i=e("./predicate_defs");a.stdlib=function(e){function t(e){e.forEach(e=>{p.define(e.name,e)})}const p=a();return e=Object.assign({dictionary:p},e),t(n(e.execute)),t(o(e)),t(s(e)),t(i),t(r(e)),p},t.exports=a},{"./combinator_defs":2,"./misc_defs":5,"./operand_defs":6,"./operator_defs":7,"./predicate_defs":8}],4:[function(e,t){function a(e){switch(e.type){case"IntegerConstant":return new s.JoyInt(e.value);case"FloatConstant":return new s.JoyFloat(e.value);case"CharacterConstant":return new s.JoyChar(e.value);case"StringConstant":return new s.JoyString(e.value);case"AtomicSymbol":return new s.JoySymbol(e.value);case"Quotation":return new s.JoyList(e.term.factors.map(a));case"Set":return new s.JoySet(e.members.map(a));case"SimpleDefinition":return new s.JoyList(e.term.factors.map(a));default:}throw new Error("Unhandled type conversion for token "+e.type)}function n(e){return 1===e?"one parameter":2===e?"two parameters":3===e?"three parameters":4===e?"four parameters":5===e?"five parameters":void 0}const r=e("./dictionary"),o=e("../parser"),s=e("./types");t.exports=function(e,t){function s(a){const r=a.handlers[0][0].length;if(e.length<r)throw new Error(`run time error: ${n(r)} needed for ${a.name}`);const o=e.peek(r),s=a.handlers.find(e=>o.every((t,a)=>{const n=e[0][a];return"*"===n||t[`is${n}`]}));if(!s){if(0===t.undefError())return;throw new Error(`run time error: suitable parameters needed for ${a.name}`)}s[1](e)}function i(t){t.definition.value.forEach(t=>{e.push(t),u()})}function l(a){if(a.isSymbol){let e;try{e=p.get(a.value)}catch(a){if(0===t.undefError())return;throw a}e.handlers?s(e):i(e)}else e.push(a)}function u(){if(e.length&&e.peek(1)[0].isSymbol){const t=e.pop();l(t,e)}}const p=r.stdlib(Object.assign({execute:u},t));return{execute:u,run:function(t){const n=o().parse(t);n.requests.forEach(t=>{"CompoundDefinition"===t.type?(t.public.definitions||[]).forEach(e=>{p.define(e.symbol.value,{name:e.symbol.value,definition:a(e)})}):t.factors.forEach(t=>{l(a(t),e)})})}}}},{"../parser":14,"./dictionary":3,"./types":9}],5:[function(e,t){function a(e,t){return e.reduce((e,a)=>{if(0===e.length)return a;const n=e.lastIndexOf("\n"),r=-1===n?e.length:e.length-n-1;return r+a.length+1<=t?`${e} ${a}`:`${e}\n${a}`},"")}const n=e("./types");t.exports=e=>[{name:"help",signature:"help      :  ->",help:`
Lists all defined symbols, including those from library files.
Then lists all primitives of raw Joy
(There is a variant: "_help" which lists hidden symbols).
`.trim(),handlers:[[[],function(){const t=e.dictionary.keys();t.reverse(),e.output(a(t,72))}]]},{name:"helpdetail",signature:"helpdetail      :  [ S1  S2  .. ]",help:"Gives brief help on each symbol S in the list.",handlers:[[["List"],function(t){const a=t.pop();a.value.forEach(t=>{let a;try{a=e.dictionary.get(t.value)}catch(t){return}a.signature&&a.help&&e.output(`${a.signature}\n  ${a.help}\n`)})}]]},{name:"setautoput",signature:"setautoput      :  I  ->",help:`
Sets value of flag for automatic put to I (if I = 0, none;
if I = 1, put; if I = 2, stack.
`.trim(),handlers:[[["Integer"],function(t){const a=t.pop();e.autoput(a.value)}]]},{name:"setundeferror",signature:"setundeferror      :  I  ->",help:`
Sets flag that controls behavior of undefined functions
(0 = no error, 1 = error).
`.trim(),handlers:[[["Integer"],function(t){const a=t.pop();e.undefError(a.value)}]]},{name:"setecho",signature:"setecho      :  I ->",help:`
Sets value of echo flag for listing.
I = 0: no echo, 1: echo, 2: with tab, 3: and linenumber.
`.trim(),handlers:[[["Integer"],function(t){const a=t.pop();e.echo(a.value)}]]},{name:"gc",signature:"",help:"",handlers:[[[],Function.prototype]]},{name:"put",signature:"put      :  X  ->",help:"Writes X to output, pops X off stack.",handlers:[[["*"],function(t){const a=t.pop();e.output(`${a.toString()}\n`)}]]},{name:"putch",signature:"putch      :  N  ->",help:"N : numeric, writes character whose ASCII is N.",handlers:[[["Character"],function(t){const a=t.pop();e.output(a.value)}],[["Integer"],function(t){const a=t.pop();e.output(n.JoyChar.from(a).value)}]]},{name:"putchars",signature:"putchars      :  \"abc..\"  ->",help:"Writes  abc.. (without quotes)",handlers:[[["String"],function(t){const a=t.pop();e.output(a.value)}]]}]},{"./types":9}],6:[function(e,t){var a=Math.floor,n=Number.MAX_SAFE_INTEGER;const r=e("./types");t.exports=e=>[{name:"false",signature:"false      :  ->  false",help:"Pushes the value false.",handlers:[[[],function(e){e.push(new r.JoyBool(!1))}]]},{name:"true",signature:"true      :  ->  true",help:"Pushes the value true.",handlers:[[[],function(e){e.push(new r.JoyBool(!0))}]]},{name:"maxint",signature:"maxint      :  ->  maxint",help:"Pushes largest integer (platform dependent). Typically it is 32 bits.",handlers:[[[],function(e){e.push(new r.JoyInt(n))}]]},{name:"setsize",signature:"setsize      :  ->  setsize",help:`
Pushes the maximum number of elements in a set (platform dependent).
Typically it is 32, and set members are in the range 0..31.
`.trim(),handlers:[[[],function(e){e.push(new r.JoyInt(32))}]]},{name:"stack",signature:"stack      :  .. X Y Z  ->  .. X Y Z [Z Y X ..]",help:"Pushes the stack as a list.",handlers:[[[],function(e){e.push(new r.JoyList(e.peek(e.length)))}]]},{name:"autoput",signature:"autoput      :  ->  I",help:"Pushes current value of flag  for automatic output, I = 0..2.",handlers:[[[],function(t){t.push(new r.JoyInt(e.autoput()))}]]},{name:"undeferror",signature:"undeferror      :  ->  I",help:"Pushes current value of undefined-is-error flag.",handlers:[[[],function(t){t.push(new r.JoyInt(e.undefError()))}]]},{name:"echo",signature:"echo      :  ->  I",help:"Pushes value of echo flag, I = 0..3.",handlers:[[[],function(t){t.push(e.echo())}]]},{name:"time",signature:"time      :  ->  I",help:"Pushes the current time (in seconds since the Epoch).",handlers:[[[],function(e){e.push(new r.JoyInt(a(Date.now()/1e3)))}]]},{name:"rand",signature:"rand      :    -> I",help:"I is a random integer.",handlers:[[[],function(e){e.push(new r.JoyInt(a(Math.random()*n)))}]]}]},{"./types":9}],7:[function(e,t){var a=Math.min,n=Math.max,r=Math.pow,o=Math.floor;const{applyToTop:s,applyToTop2:i,applyToTop3:p,applyToTop4:l,cmp:u}=e("./util"),h=e("./types"),d=e=>t=>t.map(e),g=e=>(t,a)=>t.map(e).ap(a),m=(e,t,a)=>{let n=e;for(;n.length<t;)n=`${a||" "}${n}`;return n};t.exports=e=>[{name:"id",signature:"id      :  ->",help:"Any program of the form  P id Q  is equivalent to just  P Q.",handlers:[[[],Function.prototype]]},{name:"dup",signature:"dup      :   X  ->   X X",help:"Pushes an extra copy of X onto stack.",handlers:[[["*"],function(e){const t=e.pop();e.push(t),e.push(t)}]]},{name:"swap",signature:"swap      :   X Y  ->   Y X",help:"Interchanges X and Y on top of the stack.",handlers:[[["*","*"],function(e){const t=e.pop(),a=e.pop();e.push(t),e.push(a)}]]},{name:"rollup",signature:"rollup      :  X Y Z  ->  Z X Y",help:"Moves X and Y up, moves Z down",handlers:[[["*","*","*"],function(e){const t=e.pop(),a=e.pop(),n=e.pop();e.push(t),e.push(n),e.push(a)}]]},{name:"rolldown",signature:"rolldown      :  X Y Z  ->  Y Z X",help:"Moves Y and Z down, moves X up",handlers:[[["*","*","*"],function(e){const t=e.pop(),a=e.pop(),n=e.pop();e.push(a),e.push(t),e.push(n)}]]},{name:"rotate",signature:"rotate      :  X Y Z  ->  Z Y X",help:"Interchanges X and Z",handlers:[[["*","*","*"],function(e){const t=e.pop(),a=e.pop(),n=e.pop();e.push(t),e.push(a),e.push(n)}]]},{name:"popd",signature:"popd      :  Y Z  ->  Z",help:"As if defined by:   popd  ==  [pop] dip",handlers:[[["*","*"],function(e){const t=e.pop();e.pop(),e.push(t)}]]},{name:"dupd",signature:"dupd      :  Y Z  ->  Y Y Z",help:"As if defined by:   dupd  ==  [dup] dip",handlers:[[["*","*"],function(e){const t=e.pop(),a=e.pop();e.push(a),e.push(a),e.push(t)}]]},{name:"swapd",signature:"swapd      :  X Y Z  ->  Y X Z",help:"As if defined by:   swapd  ==  [swap] dip",handlers:[[["*","*","*"],function(e){const t=e.pop(),a=e.pop(),n=e.pop();e.push(a),e.push(n),e.push(t)}]]},{name:"rollupd",signature:"rollupd      :  X Y Z W  ->  Z X Y W",help:"As if defined by:   rollupd  ==  [rollup] dip",handlers:[[["*","*","*","*"],function(e){const t=e.pop(),a=e.pop(),n=e.pop(),r=e.pop();e.push(a),e.push(r),e.push(n),e.push(t)}]]},{name:"rolldownd",signature:"rolldownd      :  X Y Z W  ->  Y Z X W",help:"As if defined by:   rolldownd  ==  [rolldown] dip",handlers:[[["*","*","*","*"],function(e){const t=e.pop(),a=e.pop(),n=e.pop(),r=e.pop();e.push(n),e.push(a),e.push(r),e.push(t)}]]},{name:"rotated",signature:"rotated      :  X Y Z W  ->  Z Y X W",help:"As if defined by:   rotated  ==  [rotate] dip",handlers:[[["*","*","*","*"],function(e){const t=e.pop(),a=e.pop(),n=e.pop(),r=e.pop();e.push(a),e.push(n),e.push(r),e.push(t)}]]},{name:"pop",signature:"pop      :   X  ->",help:"Removes X from top of the stack.",handlers:[[["*"],function(e){e.pop()}]]},{name:"choice",signature:"choice      :  B T F  ->  X",help:"If B is true, then X = T else X = F.",handlers:[[["Bool","*","*"],function(e){const t=e.pop(),a=e.pop(),n=e.pop();e.push(!0===n?a:t)}]]},{name:"or",signature:"or      :  X Y  ->  Z",help:"Z is the union of sets X and Y, logical disjunction for truth values.",handlers:[[["Bool","Bool"],i(g(e=>t=>e||t))],[["Set","Set"],i((e,t)=>e.union(t))]]},{name:"xor",signature:"xor      :  X Y  ->  Z",help:`
Z is the symmetric difference of sets X and Y,
logical exclusive disjunction for truth values.
`.trim(),handlers:[[["Bool","Bool"],i(g(e=>t=>(e||t)&&!(e&&t)))],[["Set","Set"],i((e,t)=>e.symmetricDifference(t))]]},{name:"and",signature:"and      :  X Y  ->  Z",help:"Z is the intersection of sets X and Y, logical conjunction for truth values.",handlers:[[["Bool","Bool"],i(g(e=>t=>e&&t))],[["Set","Set"],i((e,t)=>e.intersect(t))]]},{name:"not",signature:"not      :  X  ->  Y",help:"Y is the complement of set X, logical negation for truth values.",handlers:[[["Bool"],s(d(e=>!e))],[["Set"],s(e=>e.complement())]]},{name:"+",signature:"+      :  M I  ->  N",help:`
Numeric N is the result of adding integer I to numeric M.
Also supports float.
`.trim(),handlers:[[["Numeric","Numeric"],i((e,t)=>e.isCharacter||t.isCharacter?h.JoyChar.from(e.toNumber()+t.toNumber()):new h.JoyInt(e.value+t.value))],[["Float","Float"],i(g(e=>t=>e+t))]]},{name:"-",signature:"-      :  M I  ->  N",help:`
Numeric N is the result of subtracting integer I from numeric M.
Also supports float.
`.trim(),handlers:[[["Numeric","Numeric"],i((e,t)=>e.isCharacter||t.isCharacter?h.JoyChar.from(e.toNumber()-t.toNumber()):new h.JoyInt(e.value-t.value))],[["Float","Float"],i(g(e=>t=>e-t))]]},{name:"*",signature:"*      :  I J  ->  K",help:"Integer K is the product of integers I and J.  Also supports float.",handlers:[[["Integer","Integer"],i(g(e=>t=>e*t))],[["Float","Float"],i(g(e=>t=>e*t))]]},{name:"/",signature:"/      :  I J  ->  K",help:"Integer K is the (rounded) ratio of integers I and J.  Also supports float.",handlers:[[["Integer","Integer"],i(g(e=>t=>e/t))],[["Float","Float"],i(g(e=>t=>e/t))]]},{name:"rem",signature:"rem      :  I J  ->  K",help:"Integer K is the remainder of dividing I by J.  Also supports float.",handlers:[[["Integer","Integer"],i(g(e=>t=>e%t))],[["Float","Float"],i(g(e=>t=>e%t))]]},{name:"div",signature:"div      :  I J  ->  K L",help:"Integers K and L are the quotient and remainder of dividing I by J.",handlers:[[["Integer","Integer"],function(e){const t=e.pop(),a=e.pop();e.push(t.map(()=>o(a/t))),e.push(t.map(()=>o(a%t)))}]]},{name:"sign",signature:"sign      :  N1  ->  N2",help:`
Integer N2 is the sign (-1 or 0 or +1) of integer N1,
or float N2 is the sign (-1.0 or 0.0 or 1.0) of float N1.
`.trim(),handlers:[[["Integer"],s(d(e=>0===e?0:0>e?-1:1))],[["Float"],s(d(e=>0===e?0:0>e?-1:1))]]},{name:"neg",signature:"neg      :  I  ->  J",help:"Integer J is the negative of integer I.  Also supports float.",handlers:[[["Integer"],s(d(e=>-e))],[["Float"],s(d(e=>-e))]]},{name:"abs",signature:"abs      :  N1  ->  N2",help:`
Integer N2 is the absolute value (0,1,2..) of integer N1,
or float N2 is the absolute value (0.0 ..) of float N1
`.trim(),handlers:[[["Integer"],s(d(Math.abs))],[["Float"],s(d(Math.abs))]]},{name:"acos",signature:"acos      :  F  ->  G",help:"G is the arc cosine of F.",handlers:[[["Float"],s(d(Math.acos))]]},{name:"asin",signature:"asin      :  F  ->  G",help:"G is the arc sine of F.",handlers:[[["Float"],s(d(Math.asin))]]},{name:"atan",signature:"atan      :  F  ->  G",help:"G is the arc tangent of F.",handlers:[[["Float"],s(d(Math.atan))]]},{name:"atan2",signature:"atan2      :  F G  ->  H",help:"H is the arc tangent of F / G.",handlers:[[["Float","Float"],i(g(e=>t=>Math.atan(e/t)))]]},{name:"ceil",signature:"ceil      :  F  ->  G",help:"G is the float ceiling of F.",handlers:[[["Float"],s(d(Math.ceil))]]},{name:"cos",signature:"cos      :  F  ->  G",help:"G is the cosine of F.",handlers:[[["Float"],s(d(Math.cos))]]},{name:"cosh",signature:"cosh      :  F  ->  G",help:"G is the hyperbolic cosine of F.",handlers:[[["Float"],s(d(Math.cosh))]]},{name:"exp",signature:"exp      :  F  ->  G",help:"G is e (2.718281828...) raised to the Fth power.",handlers:[[["Integer"],s(e=>h.JoyFloat.from(e).map(Math.exp))]]},{name:"floor",signature:"floor      :  F  ->  G",help:"G is the floor of F.",handlers:[[["Float"],s(d(Math.floor))]]},{name:"ldexp",signature:"ldexp      :  F I  -> G",help:"G is F times 2 to the Ith power.",handlers:[[["Float","Integer"],i((e,t)=>new h.JoyFloat(e=>t=>e*t).ap(e).ap(h.JoyFloat.from(t.map(e=>r(2,e)))))]]},{name:"log",signature:"log      :  F  ->  G",help:"G is the natural logarithm of F.",handlers:[[["Float"],s(d(Math.log))]]},{name:"log10",signature:"log10      :  F  ->  G",help:"G is the common logarithm of F.",handlers:[[["Float"],s(d(Math.log10))]]},{name:"modf",signature:"modf      :  F  ->  G H",help:`
G is the fractional part and H is the integer part
(but expressed as a float) of F.
`.trim(),handlers:[[["Float"],function(e){const t=e.pop(),a=t.map(Math.floor);e.push(new h.JoyFloat(e=>t=>e%t).ap(t).ap(a)),e.push(a)}]]},{name:"pow",signature:"pow      :  F G  ->  H",help:"H is F raised to the Gth power.",handlers:[[["Float","Integer"],i((e,t)=>new h.JoyFloat(e=>t=>r(e,t)).ap(e).ap(h.JoyFloat.from(t)))]]},{name:"sin",signature:"sin      :  F  ->  G",help:"G is the sine of F.",handlers:[[["Float"],s(d(Math.sin))]]},{name:"sinh",signature:"sinh      :  F  ->  G",help:"G is the hyperbolic sine of F.",handlers:[[["Float"],s(d(Math.sinh))]]},{name:"sqrt",signature:"sqrt      :  F  ->  G",help:"G is the square root of F.",handlers:[[["Float"],s(d(Math.sqrt))]]},{name:"tan",signature:"tan      :  F  ->  G",help:"G is the tangent of F.",handlers:[[["Float"],s(d(Math.tan))]]},{name:"tanh",signature:"tanh      :  F  ->  G",help:"G is the hyperbolic tangent of F.",handlers:[[["Float"],s(d(Math.tanh))]]},{name:"trunc",signature:"trunc      :  F  ->  I",help:"I is an integer equal to the float F truncated toward zero.",handlers:[[["Float"],s(h.JoyInt.from)]]},{name:"localtime",signature:"localtime      :  I  ->  T",help:`
Converts a time I into a list T representing local time:
[year month day hour minute second isdst yearday weekday].
Month is 1 = January ... 12 = December;
isdst is a Boolean flagging daylight savings/summer time;
weekday is 0 = Monday ... 7 = Sunday.
`.trim(),handlers:[[["Integer"],s(e=>{const t=new Date(1e3*e.value),a=new Date(t.getFullYear(),0,1),r=new Date(t.getFullYear(),6,1),o=n(a.getTimezoneOffset(),r.getTimezoneOffset()),s=t.getDay();return new h.JoyList([new h.JoyInt(t.getFullYear()),new h.JoyInt(t.getMonth()+1),new h.JoyInt(t.getDate()),new h.JoyInt(t.getHours()),new h.JoyInt(t.getMinutes()),new h.JoyInt(t.getSeconds()),new h.JoyBool(t.getTimezoneOffset()<o),new h.JoyInt(t.getYear()),new h.JoyInt(0===s?6:s-1)])})]]},{name:"gmtime",signature:"gmtime      :  I  ->  T",help:`
Converts a time I into a list T representing universal time:
[year month day hour minute second isdst yearday weekday].
Month is 1 = January ... 12 = December;
isdst is false; weekday is 0 = Monday ... 7 = Sunday.
`.trim(),handlers:[[["Integer"],s(e=>{const t=new Date(1e3*e.value),a=new Date(t.getUTCFullYear(),0,1),r=new Date(t.getUTCFullYear(),6,1),o=n(a.getTimezoneOffset(),r.getTimezoneOffset()),s=t.getUTCDay();return new h.JoyList([new h.JoyInt(t.getUTCFullYear()),new h.JoyInt(t.getUTCMonth()+1),new h.JoyInt(t.getUTCDate()),new h.JoyInt(t.getUTCHours()),new h.JoyInt(t.getUTCMinutes()),new h.JoyInt(t.getUTCSeconds()),new h.JoyBool(t.getTimezoneOffset()<o),new h.JoyInt(t.getYear()),new h.JoyInt(0===s?6:s-1)])})]]},{name:"mktime",signature:"mktime      :  T  ->  I",help:`
Converts a list T representing local time into a time I.
T is in the format generated by localtime.
`.trim(),handlers:[[["List"],s(e=>{const t=e.value.map(e=>e.value),a=new Date(t[0],t[1]-1,t[2],t[3],t[4],t[5]);return new h.JoyInt(a.getTime()/1e3)})]]},{name:"strtol",signature:"strtol      :  S I  ->  J",help:`
String S is converted to the integer J using base I.
If I = 0, assumes base 10,
but leading "0" means base 8 and leading "0x" means base 16.
`.trim(),handlers:[[["String","Integer"],i((e,t)=>{let a=0===t.value?10:t.value;return e.value.startsWith("0")&&"0"!==e.value?a=8:(e.value.startsWith("0x")||e.value.startsWith("0X"))&&(a=16),h.JoyInt(parseInt(e.value,a))})]]},{name:"strtod",signature:"strtod      :  S  ->  R",help:"String S is converted to the float R.",handlers:[[["String"],s(h.JoyFloat.from)]]},{name:"format",signature:"format      :  N C I J  ->  S",help:`
S is the formatted version of N in mode C
('d or 'i = decimal, 'o = octal, 'x or
'X = hex with lower or upper case letters)
with maximum width I and minimum width J.
`.trim(),handlers:[[["Integer","Character","Integer","Integer"],l((e,t,a,n)=>{if(!/[dioxX]/.test(t.value))throw new Error("run time error: one of: d i o x X needed for format");if(/[oxX]/.test(t.value))throw new Error(`run time error: ${t.value} not yet implemented for format`);return 0===n.value&&0===e.value?"":new h.JoyString(m(e.value.toString(),n.value,"0").slice(0,a.value))})]]},{name:"formatf",signature:"formatf      :  F C I J  ->  S",help:`
S is the formatted version of F in mode C
('e or 'E = exponential, 'f = fractional,
'g or G = general with lower or upper case letters)
with maximum width I and precision J.
`.trim(),handlers:[[["Float","Character","Integer","Integer"],l((e,t,a,n)=>{if(!/[eEfgG]/.test(t.value))throw new Error("run time error: one of: e E f g G needed for format");return 0===n.value&&0===e.value?"":new h.JoyString(e.value.toFixed(n.value).slice(0,a.value))})]]},{name:"pred",signature:"pred      :  M  ->  N",help:"Numeric N is the predecessor of numeric M.",handlers:[[["Numeric"],s(e=>e.constructor.from(e.toNumber()-1))]]},{name:"succ",signature:"succ      :  M  ->  N",help:"Numeric N is the successor of numeric M.",handlers:[[["Numeric"],s(e=>e.constructor.from(e.toNumber()+1))]]},{name:"max",signature:"max      :  N1 N2  ->  N",help:"N is the maximum of numeric values N1 and N2.  Also supports float.",handlers:[[["Character","Character"],i(g(e=>t=>e>=t?e:t))],[["Integer","Integer"],i(g(e=>t=>n(e,t)))],[["Float","Float"],i(g(e=>t=>n(e,t)))]]},{name:"min",signature:"min      :  N1 N2  ->  N",help:"N is the minimum of numeric values N1 and N2.  Also supports float.",handlers:[[["Character","Character"],i((e,t)=>new h.JoyChar(e=>t=>e<=t?e:t).ap(e).ap(t))],[["Integer","Integer"],i(g(e=>t=>a(e,t)))],[["Float","Float"],i(g(e=>t=>a(e,t)))]]},{name:"unstack",signature:"unstack      :  [X Y ..]  ->  ..Y X",help:"The list [X Y ..] becomes the new stack.",handlers:[[["List"],function(e){const t=e.pop();e.clear();for(let a=t.value.length-1;0<=a;a-=1)e.push(t.value[a])}]]},{name:"cons",signature:"cons      :  X A  ->  B",help:"Aggregate B is A with a new member X (first member for sequences).",handlers:[[["*","List"],i((e,t)=>t.map(t=>[e].concat(t)))],[["Character","String"],i((e,t)=>t.map(t=>e.value.concat(t)))],[["Integer","Set"],i((e,t)=>t.union(new h.JoySet([e])))]]},{name:"swons",signature:"swons      :  A X  ->  B",help:"Aggregate B is A with a new member X (first member for sequences).",handlers:[[["List","*"],i((e,t)=>e.map(e=>[t].concat(e)))],[["String","Character"],i((e,t)=>e.map(e=>t.value.concat(e)))],[["Set","Integer"],i((e,t)=>e.union(new h.JoySet([t])))]]},{name:"first",signature:"first      :  A  ->  F",help:"F is the first member of the non-empty aggregate A.",handlers:[[["NonEmptyAggregate"],s(e=>e.first())]]},{name:"rest",signature:"rest      :  A  ->  R",help:"R is the non-empty aggregate A with its first member removed.",handlers:[[["NonEmptyAggregate"],s(e=>e.rest())]]},{name:"compare",signature:"compare      :  A B  ->  I",help:`
I (=-1,0,+1) is the comparison of aggregates A and B.
The values correspond to the predicates <=, =, >=.
`.trim(),handlers:[[["Numeric","Numeric"],i((e,t)=>new h.JoyInt(u(e,t)))],[["Float","Float"],i((e,t)=>new h.JoyInt(u(e,t)))],[["String","String"],i((e,t)=>new h.JoyInt(u(e,t)))],[["Symbol","Symbol"],i((e,t)=>new h.JoyInt(u(e,t)))]]},{name:"at",signature:"at      :  A I  ->  X",help:"X (= A[I]) is the member of A at position I.",handlers:[[["List","Integer"],i((e,t)=>e.value[t.value-1])],[["String","Integer"],i((e,t)=>e.value.charAt(t.value-1))]]},{name:"of",signature:"of      :  I A  ->  X",help:"X (= A[I]) is the I-th member of aggregate A.",handlers:[[["List","Integer"],i((e,t)=>t.value[e.value-1])],[["String","Integer"],i((e,t)=>t.value.charAt(e.value-1))]]},{name:"size",signature:"size      :  A  ->  I",help:"Integer I is the number of elements of aggregate A.",handlers:[[["Aggregate"],s(e=>new h.JoyInt(e.length===void 0?e.value.length:e.length))]]},{name:"uncons",signature:"uncons      :  A  ->  F R",help:"F and R are the first and the rest of non-empty aggregate A.",handlers:[[["NonEmptyAggregate"],function(e){const t=e.pop();e.push(t.first()),e.push(t.rest())}]]},{name:"unswons",signature:"unswons      :  A  ->  R F",help:"R and F are the rest and the first of non-empty aggregate A.",handlers:[[["NonEmptyAggregate"],function(e){const t=e.pop();e.push(t.rest()),e.push(t.first())}]]},{name:"drop",signature:"drop      :  A N  ->  B",help:"Aggregate B is the result of deleting the first N elements of A.",handlers:[[["List","Integer"],i((e,t)=>e.map(e=>e.slice(t.value)))],[["String","Integer"],i((e,t)=>e.map(e=>e.slice(t.value)))],[["Set","Integer"],i((e,t)=>e.drop(t.value))]]},{name:"take",signature:"take      :  A N  ->  B",help:"Aggregate B is the result of retaining just the first N elements of A.",handlers:[[["List","Integer"],i((e,t)=>e.map(e=>e.slice(0,t.value)))],[["String","Integer"],i((e,t)=>e.map(e=>e.slice(0,t.value)))],[["Set","Integer"],i((e,t)=>e.take(t.value))]]},{name:"concat",signature:"concat      :  S T  ->  U",help:"Sequence U is the concatenation of sequences S and T.",handlers:[[["List","List"],i(g(e=>t=>e.concat(t)))]]},{name:"enconcat",signature:"enconcat      :  X S T  ->  U",help:`
Sequence U is the concatenation of sequences S and T
with X inserted between S and T (== swapd cons concat)
`.trim(),handlers:[[["*","List","List"],p((e,a,n)=>a.map(t=>t.concat([e.value]).concat(n.value)))],[["Character","String","String"],p((e,a,n)=>a.map(t=>t.concat([e.value]).concat(n.value)))],[["Integer","Set","Set"],p((e,a,n)=>a.union(new h.JoySet([e]).union(n)))]]},{name:"intern",signature:"intern      :  \"sym\"  -> sym",help:"Pushes the item whose name is \"sym\".",handlers:[[["String"],s(e=>new h.JoySymbol(e.value))]]},{name:"body",signature:"body      :  U  ->  [P]",help:"Quotation [P] is the body of user-defined symbol U.",handlers:[[["Symbol"],s(t=>e.dictionary.get(t.value).definition)]]}]},{"./types":9,"./util":10}],8:[function(e,t){const{applyToTop:a,applyToTop2:n,eq:r,ne:o,lte:s,lt:i,gte:p,gt:l}=e("./util"),u=e("./types");t.exports=[{name:"null",signature:"null      :  X  ->  B",help:"Tests for empty aggregate X or zero numeric.",handlers:[[["Integer"],a(e=>new u.JoyBool(0===e.value))],[["Character"],a(e=>new u.JoyBool("\0"===e.value))],[["Aggregate"],a(e=>new u.JoyBool(0===e.length))]]},{name:"small",signature:"small      :  X  ->  B",help:"Tests whether aggregate X has 0 or 1 members, or numeric 0 or 1.",handlers:[[["Aggregate"],a(e=>new u.JoyBool(0===e.length||1===e.length))],[["Integer"],a(e=>new u.JoyBool(0===e.value||1===e.value))],[["Character"],a(e=>new u.JoyBool("\0"===e.value||"\x01"===e.value))]]},{name:">=",signature:">=      :  X Y  ->  B",help:`
Either both X and Y are numeric or both are strings or symbols.
Tests whether X greater than or equal to Y.  Also supports float.
`.trim(),handlers:[[["Numeric","Numeric"],n((e,t)=>new u.JoyBool(p(e,t)))],[["Float","Float"],n((e,t)=>new u.JoyBool(p(e,t)))],[["String","String"],n((e,t)=>new u.JoyBool(p(e,t)))],[["Symbol","Symbol"],n((e,t)=>new u.JoyBool(p(e,t)))]]},{name:">",signature:">      :  X Y  ->  B",help:`
Either both X and Y are numeric or both are strings or symbols.
Tests whether X greater than Y.  Also supports float.
`.trim(),handlers:[[["Numeric","Numeric"],n((e,t)=>new u.JoyBool(l(e,t)))],[["Float","Float"],n((e,t)=>new u.JoyBool(l(e,t)))],[["String","String"],n((e,t)=>new u.JoyBool(l(e,t)))],[["Symbol","Symbol"],n((e,t)=>new u.JoyBool(l(e,t)))]]},{name:"<=",signature:"<=      :  X Y  ->  B",help:`
Either both X and Y are numeric or both are strings or symbols.
Tests whether X less than or equal to Y.  Also supports float.
`.trim(),handlers:[[["Numeric","Numeric"],n((e,t)=>new u.JoyBool(s(e,t)))],[["Float","Float"],n((e,t)=>new u.JoyBool(s(e,t)))],[["String","String"],n((e,t)=>new u.JoyBool(s(e,t)))],[["Symbol","Symbol"],n((e,t)=>new u.JoyBool(s(e,t)))]]},{name:"<",signature:"<      :  X Y  ->  B",help:`
Either both X and Y are numeric or both are strings or symbols.
Tests whether X less than Y.  Also supports float.
`.trim(),handlers:[[["Numeric","Numeric"],n((e,t)=>new u.JoyBool(i(e,t)))],[["Float","Float"],n((e,t)=>new u.JoyBool(i(e,t)))],[["String","String"],n((e,t)=>new u.JoyBool(i(e,t)))],[["Symbol","Symbol"],n((e,t)=>new u.JoyBool(i(e,t)))]]},{name:"!=",signature:"!=      :  X Y  ->  B",help:`
Either both X and Y are numeric or both are strings or symbols.
Tests whether X not equal to Y.  Also supports float.
`.trim(),handlers:[[["Numeric","Numeric"],n((e,t)=>new u.JoyBool(o(e,t)))],[["Float","Float"],n((e,t)=>new u.JoyBool(o(e,t)))],[["String","String"],n((e,t)=>new u.JoyBool(o(e,t)))],[["Symbol","Symbol"],n((e,t)=>new u.JoyBool(o(e,t)))]]},{name:"=",signature:"=      :  X Y  ->  B",help:`
Either both X and Y are numeric or both are strings or symbols.
Tests whether X equal to Y.  Also supports float.
`.trim(),handlers:[[["Numeric","Numeric"],n((e,t)=>new u.JoyBool(r(e,t)))],[["Float","Float"],n((e,t)=>new u.JoyBool(r(e,t)))],[["String","String"],n((e,t)=>new u.JoyBool(r(e,t)))],[["Symbol","Symbol"],n((e,t)=>new u.JoyBool(r(e,t)))]]},{name:"equal",signature:"equal      :  T U  ->  B",help:"(Recursively) tests whether trees T and U are identical.",handlers:[[["List","List"],n((e,t)=>new u.JoyBool(r(e,t)))]]},{name:"has",signature:"has      :  A X  ->  B",help:"Tests whether aggregate A has X as a member.",handlers:[[["List","*"],n((e,t)=>new u.JoyBool(e.value.find(e=>e.value===t.value)))],[["String","Character"],n((e,t)=>new u.JoyBool(0<=e.value.indexOf(t.value)))],[["Set","Integer"],n((e,t)=>new u.JoyBool(e.has(t)))]]},{name:"in",signature:"in      :  X A  ->  B",help:"Tests whether X is a member of aggregate A.",handlers:[[["List","*"],n((e,t)=>new u.JoyBool(t.value.find(t=>t.value===e.value)))],[["String","Character"],n((e,t)=>new u.JoyBool(0<=t.value.indexOf(e.value)))],[["Set","Integer"],n((e,t)=>new u.JoyBool(t.has(e)))]]},{name:"integer",signature:"integer      :  X  ->  B",help:"Tests whether X is an integer.",handlers:[[["*"],a(e=>new u.JoyBool(!!e.isInteger))]]},{name:"char",signature:"char      :  X  ->  B",help:"Tests whether X is a character.",handlers:[[["*"],a(e=>new u.JoyBool(!!e.isCharacter))]]},{name:"logical",signature:"logical      :  X  ->  B",help:"Tests whether X is a logical.",handlers:[[["*"],a(e=>new u.JoyBool(!!e.isLogical))]]},{name:"set",signature:"set      :  X  ->  B",help:"Tests whether X is a set.",handlers:[[["*"],a(e=>new u.JoyBool(!!e.isSet))]]},{name:"string",signature:"string      :  X  ->  B",help:"Tests whether X is a string.",handlers:[[["*"],a(e=>new u.JoyBool(!!e.isString))]]},{name:"list",signature:"list      :  X  ->  B",help:"Tests whether X is a list.",handlers:[[["*"],a(e=>new u.JoyBool(!!e.isList))]]},{name:"leaf",signature:"leaf      :  X  ->  B",help:"Tests whether X is not a list.",handlers:[[["*"],a(e=>new u.JoyBool(!e.isList))]]},{name:"float",signature:"float      :  R  ->  B",help:"Tests whether R is a float.",handlers:[[["*"],a(e=>new u.JoyBool(!!e.isFloat))]]}]},{"./types":9,"./util":10}],9:[function(e,t){function a(e){this.value=e,Object.defineProperty(this,"isNonEmptyAggregate",{get:()=>!!this.isAggregate&&0!==(this.length||this.value.length)})}function n(e){a.call(this,e),this.isInteger=!0,this.isNumeric=!0}function r(e){a.call(this,e),this.isFloat=!0}function o(e){a.call(this,e),this.isCharacter=!0,this.isNumeric=!0}function s(e){a.call(this,e),this.isString=!0,this.isAggregate=!0}function i(e){a.call(this,e),this.isBool=!0,this.isLogical=!0}function p(e){a.call(this,e),this.isList=!0,this.isAggregate=!0}function l(e){a.call(this,null),this._values={},this._smallest=d,this._length=0,e.forEach(e=>{this.add(e)}),this.isSet=!0,this.isAggregate=!0,Object.defineProperty(this,"length",{get:()=>this._length})}function u(e){a.call(this,e),this.isSymbol=!0}var h=String.fromCharCode;a.prototype.ap=function(e){return e.map(this.value)},a.prototype.map=function(e){return new this.constructor(e(this.value))},a.prototype.toString=function(){return this.value.toString()},n.prototype=Object.create(a.prototype),n.prototype.constructor=n,n.from=function(e){if(e.isFloat)return new n(Math.trunc(e.value));if(e.isCharacter)return new n(e.toNumber());if("number"==typeof e)return new n(Math.floor(e));if("string"==typeof e&&1===e.length)return new n(e.charCodeAt(0));throw new Error("Cannot convert "+e+" to Integer")},n.prototype.toNumber=function(){return this.value},n.prototype.equals=function(e){return this.value===e.value},n.prototype.lte=function(e){return this.equals(e)||this.value<e.value},r.prototype=Object.create(a.prototype),r.prototype.constructor=r,r.from=function(e){if(e.isInteger)return new r(e.value);if("number"==typeof e)return new r(e);if(e.isString)return new r(parseFloat(e.value));if("string"==typeof e)return new r(parseFloat(e));throw new Error("Cannot convert "+e+" to Float")},r.prototype.toString=function(){const e=this.value.toString();return e.includes(".")?e:`${e}.0`},r.prototype.equals=function(e){return this.value===e.value},r.prototype.lte=function(e){return this.equals(e)||this.value<e.value},o.prototype=Object.create(a.prototype),o.prototype.constructor=o,o.from=function(e){if(e.isInteger)return new o(h(e.value));if("number"==typeof e)return new o(h(e));if(e.isString&&1===e.value.length)return new o(e.value);if("string"==typeof e&&1===e.length)return new o(e.value);throw new Error("Cannot convert "+e+" to Character")},o.prototype.toNumber=function(){return this.value.charCodeAt(0)},o.prototype.toString=function(){return`'${this.value.toString()}`},o.prototype.equals=function(e){return this.value===e.value},o.prototype.lte=function(e){return this.equals(e)||this.value<e.value},s.prototype=Object.create(a.prototype),s.prototype.constructor=s,s.prototype.toString=function(){return`"${this.value}"`},s.from=function(e){if(e.isCharacter)return new s(e.value);throw new Error("Cannot convert "+e+" to String")},s.prototype.first=function(){return new o(this.value.charAt(0))},s.prototype.rest=function(){return this.map(e=>e.slice(1))},s.prototype.equals=function(e){return this.value===e.value},s.prototype.lte=function(e){return this.equals(e)||this.value<e.value},i.prototype=Object.create(a.prototype),i.prototype.constructor=i,p.prototype=Object.create(a.prototype),p.prototype.constructor=p,p.prototype.toString=function(){return`[${this.value.map(e=>e.toString()).join(" ")}]`},p.prototype.first=function(){return this.value[0]},p.prototype.rest=function(){return this.map(e=>e.slice(1))},p.prototype.equals=function(e){return!(this.value.length!==e.value.length)&&this.value.every((t,a)=>t.equals?t.equals(e.value[a]):t.value===e.value[t].value)};const d=32;l.prototype=Object.create(a.prototype),l.prototype.constructor=l,l.prototype.add=function(e){const t=e.toNumber();if(!this.has(t))return this._values[t]=e,this._length+=1,t<this._smallest&&(this._smallest=t),this},l.prototype.has=function(e){return!!this._values[e.value]},l.prototype.forEach=function(e){Object.keys(this._values).forEach(t=>{e(this._values[t])})},l.prototype.forEachOrdered=function(e){for(let t=0;t<d;t+=1)void 0!==this._values[t]&&e(this._values[t])},l.prototype.union=function(e){const t=new l([]);return this.forEach(e=>{t.add(e)}),e.forEach(e=>{t.add(e)}),t},l.prototype.intersect=function(e){const t=new l([]);return this.forEach(a=>{e.has(a)&&t.add(a)}),t},l.prototype.symmetricDifference=function(e){const t=new l([]);return this.forEach(a=>{e.has(a)||t.add(a)}),e.forEach(e=>{this.has(e)||t.add(e)}),t},l.prototype.complement=function(){const e=new l([]);for(let t=0;t<d;t+=1){const a=new n(t);this.has(a)||e.add(a)}return e},l.prototype.first=function(){return new n(this._smallest)},l.prototype.rest=function(){const e=new l([]);return this.forEach(t=>{t.value!==this._smallest&&e.add(t)}),e},l.prototype.toString=function(){const e=[];return this.forEach(t=>{e.push(t.toString())}),`{${e.join(" ")}}`},l.prototype.equals=function(e){if(this.length!==e.length)return!1;let t=!0;return this.forEach(a=>{t=t&&e.has(a)}),t},l.prototype.drop=function(e){const t=new l([]);let a=0;return this.forEachOrdered(n=>{a<e?a+=1:t.add(n)}),t},l.prototype.take=function(e){const t=new l([]);let a=0;return this.forEachOrdered(n=>{a<e&&(a+=1,t.add(n))}),t},u.prototype=Object.create(a.prototype),u.prototype.constructor=u,u.prototype.equals=function(e){return this.value===e.value},u.prototype.lte=function(e){return this.equals(e)||this.value<e.value},t.exports={JoyInt:n,JoyFloat:r,JoyChar:o,JoyString:s,JoyBool:i,JoyList:p,JoySet:l,JoySymbol:u}},{}],10:[function(e,t,a){const n=e=>t=>a=>{const n=Array(e);for(let t=e-1;0<=t;t-=1)n[t]=a.pop();a.push(t.apply(null,n))};a.applyToTop=n(1),a.applyToTop2=n(2),a.applyToTop3=n(3),a.applyToTop4=n(4),a.eq=(e,t)=>e.equals(t),a.ne=(e,t)=>!a.eq(e,t),a.lte=(e,t)=>e.lte(t),a.lt=(e,t)=>a.lte(e,t)&&!a.eq(e,t),a.gte=(e,t)=>!a.lt(e,t),a.gt=(e,t)=>!a.lte(e,t),a.cmp=(e,t)=>a.eq(e,t)?0:a.lte(e,t)?-1:1},{}],11:[function(e,t){const a=e("./interpreter"),n=e("./output"),r=e("./stack");t.exports=function(){const e={autoput:1,echo:0,undefError:1},t=new r,o=new n,s=t=>a=>void 0===a?e[t]:void(e[t]=a),i=a(t,{autoput:s("autoput"),echo:s("echo"),undefError:s("undefError"),output:function(e){o.write(e)}});return{run:function(a){switch(o.clear(),e.echo){case 0:break;case 1:o.write(`${a}\n`);break;case 2:o.write(`\t${a}\n`);break;case 3:o.write(`1.\t${a}\n`);}switch(i.run(a),e.autoput){case 0:break;case 1:o.write(t.peek(1).toString()+"\n");break;case 2:t.peek(t.length).forEach(e=>{o.write(e.toString()+"\n")});}return o.toString().replace(/\n$/,"")}}}},{"./interpreter":4,"./output":13,"./stack":15}],12:[function(e,t){function a(e,t,a,n){this.type=e,this.rawValue=t,this.value=null==a?t:a,this.pos=n}var n=String.fromCharCode,r=e("./fsm");const o={"'\\n":"\n","'\\t":"\t","'\\b":"\b","'\\r":"\r","'\\f":"\f","'\\'":"'","'\\\"":"\""};var s=r({initial:"Initial",stop:"NoNextState",accepting:["Integer","NumberZero","NumberWithDecimal","NumberWithExponent","OctalNumber","HexNumber"],default:"NoNextState",states:{Initial:[["0","NumberZero"],["-","BeginNegativeNumber"],[/[0-9]/,"Integer"]],Integer:[[/[0-9]/,"Integer"],[".","BeginNumberWithDecimal"],[/[eE]/,"BeginNumberWithExponent"]],BeginNumberWithDecimal:[[/[0-9]/,"NumberWithDecimal"]],NumberWithDecimal:[[/[0-9]/,"NumberWithDecimal"],[/[eE]/,"BeginNumberWithExponent"]],BeginNumberWithExponent:[["-","BeginNumberWithSignedExponent"],[/[0-9]/,"NumberWithExponent"]],BeginNumberWithSignedExponent:[[/[0-9]/,"NumberWithExponent"]],NumberWithExponent:[[/[0-9]/,"NumberWithExponent"]],NumberZero:[[/[0-7]/,"OctalNumber"],[/[xX]/,"BeginHexNumber"],[".","BeginNumberWithDecimal"]],OctalNumber:[[/[0-7]/,"OctalNumber"]],BeginHexNumber:[[/[0-9A-F]/,"HexNumber"]],HexNumber:[[/[0-9A-F]/,"HexNumber"]],BeginNegativeNumber:[["0","NumberZero"],[/[1-9]/,"Integer"]]}}),i=r({initial:"Initial",stop:"NoNextState",accepting:["Character","EscapedCharacter","CharacterEscapedAscii"],default:"NoNextState",states:{Initial:[["'","BeginCharacter"]],BeginCharacter:[[/[^\\]/,"Character"],["\\","BeginEscapedCharacter"]],BeginEscapedCharacter:[[/[ntbrf'"]/,"EscapedCharacter"],[/\d/,"BeginEscapedAscii0"]],BeginEscapedAscii0:[[/\d/,"BeginEscapedAscii1"]],BeginEscapedAscii1:[[/\d/,"CharacterEscapedAscii"]]}}),p=r({initial:"Initial",stop:"NoNextState",accepting:["String"],default:"NoNextState",seed:"",states:{Initial:[["\"","BeginString"]],BeginString:[["\"","String"],["\\","BeginStringEscape"],[/./,"BeginString",(e,t)=>e+t]],BeginStringEscape:[[/[ntbrf'"]/,"BeginString",(e,t)=>"n"===t?e+"\n":"t"===t?e+"\t":"b"===t?e+"\b":"r"===t?e+"\r":"f"===t?e+"\f":"'"===t?e+"'":"\""===t?e+"\"":void 0],[/\d/,"BeginStringEscapedAscii0",(e,t)=>e+t]],BeginStringEscapedAscii0:[[/\d/,"BeginStringEscapedAscii1",(e,t)=>e+t]],BeginStringEscapedAscii1:[[/\d/,"BeginString",(e,t)=>{const a=parseInt(e.slice(-2)+t,8);return e.slice(0,-2)+n(a)}]]}});t.exports=function(e){function t(){throw new Error("Parse error: Unexpected end of input")}function r(t){return t=t||1,e.slice(v,v+t)}function l(a){a=a||1;const o=r(a);return o.length===a?(v+=a,I=e.charAt(v),o):void t()}function u(){for(;" "===I||"\t"===I||"\n"===I;)l(1)}function h(){for(;v<e.length&&"\n"!==I;)l(1)}function d(){const a=e.indexOf("*)",v);-1===a&&t(),l(a+2-v)}function g(){const t=v,n=s.run(e.slice(v));return null===n?null:(l(n.value.length),"NumberWithDecimal"===n.state||"NumberWithExponent"===n.state)?new a("FloatConstant",n.value,parseFloat(n.value),t):"OctalNumber"===n.state?new a("IntegerConstant",n.value,parseInt(n.value,8),t):"HexNumber"===n.state?new a("IntegerConstant",n.value,parseInt(n.value,16),t):new a("IntegerConstant",n.value,parseInt(n.value,10),t)}function m(){const t=v,r=i.run(e.slice(v));if(null===r)return null;l(r.value.length);let s;if("Character"===r.state)s=r.value.charAt(1);else if("EscapedCharacter"===r.state)s=o[r.value];else{const e=parseInt(r.value.slice(2),8);s=n(e)}return new a("CharacterConstant",r.value,s,t)}function c(){const t=v,n=p.run(e.slice(v));return null===n?null:(l(n.value.length),new a("StringConstant",n.value,n.acc,t))}function f(){const t=v;let n,r=v;if(/[a-zA-Z!@$%^&*()\-_+=\\|:<>,?/]/.test(I)){for(r+=1;/[a-zA-Z0-9=_-]/.test(e.charAt(r));)r+=1;return(n=l(r-v),"true"===n)?new a("AtomicSymbol","true",!0,t):"false"===n?new a("AtomicSymbol","false",!1,t):new a(S[n]||"AtomicSymbol",n,null,t)}return null}function y(){let n;u();const o=v;switch(!0){case v>=e.length:return null;case"ReservedChar"===S[I]:return n=new a("ReservedChar",I,null,o),l(1),n;case"#"===I:return h(),y();case"(*"===r(2):return d(),y();case /[0-9]/.test(I):return g()||t();case"-"===I:return g()||f()||t();case"'"===I:return m()||t();case"\""===I:return c()||t();default:return f()||t();}}let v=0,I=e.charAt(v);const S={"[":"ReservedChar","]":"ReservedChar","{":"ReservedChar","}":"ReservedChar",";":"ReservedChar",".":"ReservedChar","==":"ReservedWord",MODULE:"ReservedWord",PRIVATE:"ReservedWord",HIDE:"ReservedWord",PUBLIC:"ReservedWord",IN:"ReservedWord",DEFINE:"ReservedWord",LIBRA:"ReservedWord",END:"ReservedWord"};return{tokenize:function(){const e=[];for(let t=y();null!==t;)e.push(t),t=y();return e}}}},{"./fsm":1}],13:[function(e,t){function a(){this.clear()}a.prototype.clear=function(){return this.value="",this},a.prototype.write=function(e){return this.value+=e,this},a.prototype.toString=function(){return this.value},t.exports=a},{}],14:[function(e,t){const a=e("./lexer");t.exports=function(){function e(){let e=c.lastIndexOf("\n",y[f].pos),t=c.indexOf("\n",y[f].pos);-1===e?e=0:e+=1,-1===t&&(t=c.length-1);const a=c.slice(e,t),n=y[f].pos-e,r=Array(n).fill(" ").join("");return`${a}\n${r}^`}function t(t,a){if(!t)throw a=a||`Syntax Error: Unexpected token "${y[f].value}"\n\n${e()}`,new Error(a)}function n(e,t){const a=y[f],n=!!a&&a.type===e&&(1===arguments.length||a.value===t)&&a;return n&&(f+=1),n}function r(){const e={type:"Cycle",requests:[]};for(;;){let t=o();if(t){e.requests.push(t);continue}if(t=u(),t&&m()){e.requests.push(t);continue}break}return e}function o(){let e=s();if(e)return e;const t=n("ReservedWord","MODULE")&&n("AtomicSymbol"),a=n("ReservedWord","PRIVATE")&&i(),r=(n("ReservedWord","PUBLIC")||n("ReservedWord","DEFINE")||n("ReservedWord","LIBRA"))&&i();return!!((t||a||r)&&m())&&{type:"CompoundDefinition",module:t,private:a,public:r}}function s(){if(n("ReservedWord","HIDE")){const e=i();t(e&&n("ReservedWord","IN"),"IN expected in HIDE-definition");const a=i();return t(a&&n("ReservedWord","END"),"END expected in HIDE-definition"),{type:"CompoundDefinition",module:!1,private:e,public:a}}return!1}function i(){const e=[];for(let t=p();t;)e.push(t),t=n("ReservedChar",";")&&p();return!!e.length&&{type:"DefinitionSequence",definitions:e}}function p(){return l()||o()}function l(){const e=n("AtomicSymbol");if(!(e&&n("ReservedWord","==")))return!1;const t=u();return t&&{type:"SimpleDefinition",symbol:e,term:t}}function u(){const e={type:"Term",factors:[]};for(let t=h();t;)e.factors.push(t),t=h();return e}function h(){return n("AtomicSymbol")||n("IntegerConstant")||n("FloatConstant")||n("CharacterConstant")||n("StringConstant")||d()||g()}function d(){if(n("ReservedChar","{")){const e=[];for(let t=n("CharacterConstant")||n("IntegerConstant");t;)e.push(t),t=n("CharacterConstant")||n("IntegerConstant");if(n("ReservedChar","}"))return{type:"Set",members:e}}return!1}function g(){if(n("ReservedChar","[")){const e=u();if(e&&n("ReservedChar","]"))return{type:"Quotation",term:e}}return!1}function m(){return n("ReservedWord","END")||n("ReservedChar",".")}let c,f,y;return{parse:function(e){c=e;const n=a(c);f=0,y=n.tokenize();const o=r();return t(f===y.length),o}}}},{"./lexer":12}],15:[function(e,t){function a(){var e=this;this._data=[],Object.defineProperty(this,"length",{get:function(){return e._data.length}})}a.prototype.pop=function(){if(0<this.length)return this._data.pop();throw new RangeError("Cannot pop from empty stack")},a.prototype.push=function(e){this._data.push(e)},a.prototype.peek=function(e){return 0===e?[]:this._data.slice(-e)},a.prototype.clear=function(){this._data.length=0},a.prototype.restoreAfter=function(e){const t=this._data.slice(0),a=e();return this._data=t,a},a.prototype.toString=function(){return this._data.toString()},t.exports=a},{}],16:[function(e){function t(e){try{const t=p.run(e);s.textContent=t,i.push(e),l=i.length-1,o.value=""}catch(t){throw s.textContent=t.toString(),t}}function a(){0<l&&(l-=1),o.value=i[l]||""}function n(){l<i.length&&(l+=1),o.value=i[l]||""}const r=e("../src/joy/joy"),o=document.querySelector("[name=input]"),s=document.querySelector(".output-result"),i=[],p=r();let l;o.addEventListener("keydown",function(r){"Enter"!==r.key||r.shiftKey?"p"===r.key&&r.ctrlKey?(r.preventDefault(),a()):"n"===r.key&&r.ctrlKey&&(r.preventDefault(),n()):(r.preventDefault(),t(o.value.trim()))})},{"../src/joy/joy":11}]},{},[16]);